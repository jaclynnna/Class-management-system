<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

<!--  <welcome-file-list>-->
<!--    <welcome-file>-->
<!--      /templates/login.html-->
<!--    </welcome-file>-->
<!--  </welcome-file-list>-->
  <!--    <welcome-file-list>-->
  <!--        <welcome-file>-->
  <!--            page/thymeleaf.html-->
  <!--        </welcome-file>-->
  <!--    </welcome-file-list>-->
  <!--springMVC的前端控制器DispatcherServlet-->
  <servlet>
    <servlet-name>DispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:a.xml</param-value>
    </init-param>
    <!--        数字代表优先级
    1)load-on-startup元素标记容器是否在启动的时候就加载这个servlet(实例化并调用其init()方法)。
    2)它的值必须是一个整数，表示servlet应该被载入的顺序
    2)当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；
    3)当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。
    4)正数的值越小，该servlet的优先级越高，应用启动时就越先加载。
    5)当值相同时，容器就会自己选择顺序来加载。
    所以，<load-on-startup>x</load-on-startup>，中x的取值1，2，3，4，5代表的是优先级，而非启动延迟时间。
    -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!--配置成 / 就不用写成*.do  但是这样就拦截了所以的请求，静态资源也会被拦截，所以后面我们还需要过滤静态资源-->
  <servlet-mapping>
    <servlet-name>DispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <!--乱码处理-->
  <!--乱码过滤器-->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <servlet>
    <servlet-name>KaptchaServlet</servlet-name>
    <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>KaptchaServlet</servlet-name>
    <url-pattern>/code.jpg</url-pattern>
  </servlet-mapping>
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>



</web-app>